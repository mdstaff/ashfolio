defmodule Ashfolio.Repo.Migrations.CreateDatabaseAsUserSchema do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_sqlite.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:user_settings, primary_key: false) do
      add :updated_at, :utc_datetime_usec, null: false
      add :inserted_at, :utc_datetime_usec, null: false
      add :locale, :text, null: false
      add :currency, :text, null: false
      add :name, :text, null: false
      add :id, :uuid, null: false, primary_key: true
    end

    create table(:transactions, primary_key: false) do
      add :category_id,
          references(:transaction_categories,
            column: :id,
            name: "transactions_category_id_fkey",
            type: :uuid
          )

      add :symbol_id,
          references(:symbols, column: :id, name: "transactions_symbol_id_fkey", type: :uuid),
          null: false

      add :account_id,
          references(:accounts, column: :id, name: "transactions_account_id_fkey", type: :uuid),
          null: false

      add :updated_at, :utc_datetime_usec, null: false
      add :inserted_at, :utc_datetime_usec, null: false
      add :notes, :text
      add :date, :date, null: false
      add :fee, :decimal, null: false
      add :total_amount, :decimal, null: false
      add :price, :decimal, null: false
      add :quantity, :decimal, null: false
      add :type, :text, null: false
      add :id, :uuid, null: false, primary_key: true
    end

    create table(:transaction_categories, primary_key: false) do
      add :parent_category_id,
          references(:transaction_categories,
            column: :id,
            name: "transaction_categories_parent_category_id_fkey",
            type: :uuid
          )

      add :updated_at, :utc_datetime_usec, null: false
      add :inserted_at, :utc_datetime_usec, null: false
      add :is_system, :boolean, null: false
      add :color, :text
      add :name, :text, null: false
      add :id, :uuid, null: false, primary_key: true
    end

    create table(:symbols, primary_key: false) do
      add :updated_at, :utc_datetime_usec, null: false
      add :inserted_at, :utc_datetime_usec, null: false
      add :price_updated_at, :utc_datetime
      add :current_price, :decimal
      add :data_source, :text, null: false
      add :countries, {:array, :text}, default: []
      add :sectors, {:array, :text}, default: []
      add :isin, :text
      add :currency, :text, null: false
      add :asset_class, :text, null: false
      add :name, :text
      add :symbol, :text, null: false
      add :id, :uuid, null: false, primary_key: true
    end

    create table(:accounts, primary_key: false) do
      add :updated_at, :utc_datetime_usec, null: false
      add :inserted_at, :utc_datetime_usec, null: false
      add :minimum_balance, :decimal
      add :interest_rate, :decimal
      add :account_type, :text, null: false
      add :balance_updated_at, :utc_datetime
      add :balance, :decimal, null: false
      add :is_excluded, :boolean, null: false
      add :currency, :text, null: false
      add :platform, :text
      add :name, :text, null: false
      add :id, :uuid, null: false, primary_key: true
    end
  end

  def down do
    drop table(:accounts)

    drop table(:symbols)

    drop constraint(:transaction_categories, "transaction_categories_parent_category_id_fkey")

    drop table(:transaction_categories)

    drop constraint(:transactions, "transactions_account_id_fkey")

    drop constraint(:transactions, "transactions_symbol_id_fkey")

    drop constraint(:transactions, "transactions_category_id_fkey")

    drop table(:transactions)

    drop table(:user_settings)
  end
end
